#include <bits/stdc++.h>

using namespace std;
#define int long long
#define INF (int)1e18
#define endl '\n'
const int mod = 1000 * 1000 * 1000 + 7;
const int N = 100005;
#define f first
#define s second

mt19937_64 RNG(chrono::steady_clock::now().time_since_epoch().count());

void Solve() {
    int x , y;cin>>x>>y;
    int  pos =  x;
    int val = 1; bool sign = true;
    int dis = 0;
    while (true){
        if ((pos>=y && x<=y) || (pos<=y && y <= x)){
            //cout<<pos<<endl;
            cout<<dis- abs(pos - y)<<endl;
            return;
        }
        if (sign){
            int ad = x + val;
            dis += abs(pos - ad);
            pos = ad;
            val = 2* val; sign = false;
        }
        else{
            int sub = x - val;
            dis += abs(pos - sub);
            pos = sub;
            val = 2* val; sign = true;
        }
    }
}


int32_t main() {
    auto begin = std::chrono::high_resolution_clock::now();
    ios_base::sync_with_stdio(false);
    cin.tie(0);

#ifndef ONLINE_JUDGE
    freopen("lostcow.in", "r", stdin);
    freopen("lostcow.out", "w", stdout);
#endif

    int t = 1;
   // cin >> t;
    for (int i = 1; i <= t; i++) {
        //cout << "Case #" << i << ": ";
        Solve();
    }
    auto end = std::chrono::high_resolution_clock::now();
    auto elapsed = std::chrono::duration_cast<std::chrono::nanoseconds>(end - begin);
    cerr << "Time measured: " << elapsed.count() * 1e-9 << " seconds.\n";
    return 0;
}
